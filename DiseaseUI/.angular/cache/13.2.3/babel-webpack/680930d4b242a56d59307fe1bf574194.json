{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Projects\\\\DiseaseMIS\\\\Disease_UI\\\\Disease_UI\\\\UI\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LaboratoryExaminationComponent = class LaboratoryExaminationComponent {\n  constructor(apiService, toast, datePipe, authService) {\n    this.apiService = apiService;\n    this.toast = toast;\n    this.datePipe = datePipe;\n    this.authService = authService;\n    this.content = {\n      name: \"Laboratory Examination Form\",\n      errors: [],\n      categories: [],\n      samples: [],\n      forms: {\n        district: {}\n      },\n      fixedColumnHeader: [],\n      columnHeader: [],\n      apiLink: '/forms/laboratory',\n      user: {}\n    };\n    this.loading = false;\n    this.content.user = this.authService.userValue;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.getDistricts();\n      yield _this.getAnimalCategories();\n      yield _this.getSamples();\n    })();\n  }\n\n  ngAfterViewInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.getForm();\n    })();\n  }\n\n  getDistricts() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.loading = true;\n\n      _this3.apiService.getData('/master/districts', null).subscribe(res => {\n        _this3.loading = false;\n\n        if (!res) {\n          _this3.toast.error(\"Could not connect to Server. Try again after sometime.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n        } else {\n          if (res.data.length <= 0) {\n            _this3.content.errorMessage = \"No Districts found. Click 'Add New' to add.\";\n          }\n\n          _this3.content.districts = res.data;\n          console.log(res.data);\n        }\n      }, error => {\n        _this3.loading = false;\n        _this3.content.errorMessage = \"Could not load data at this time. Try again later.\";\n      });\n    })();\n  }\n\n  getAnimalCategories() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.loading = true;\n\n      _this4.apiService.getData(`/master/animals/category`, null).subscribe(res => {\n        _this4.loading = false;\n\n        if (!res) {\n          _this4.toast.error(\"Could not connect to Server. Try again after sometime.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n        } else {\n          if (res.length <= 0) {\n            _this4.content.errors.push(\"No animal categories found.\");\n          }\n\n          _this4.content.categories = res;\n\n          _this4.content.categories.forEach(function (_cat) {\n            _cat.subTests = [];\n          });\n        }\n      }, error => {\n        _this4.loading = false;\n\n        _this4.content.errors.push(\"Could not load data at this time. Try again later.\");\n      });\n    })();\n  }\n\n  approveEdit() {\n    this.apiService.putData(`/forms/${this.content.forms.id}/toggleLabFormLock`, this.content.forms.id, null).subscribe(res => {\n      if (!res) {\n        this.toast.error(\"Could not connect to Server. Try again after sometime.\", {\n          position: 'top-right',\n          autoClose: true\n        });\n      } else {\n        this.toast.success(\"Form is unlocked, user can re-edit the form again.\", {\n          position: 'top-right',\n          autoClose: true\n        });\n        this.getForm();\n      }\n    }, error => {\n      this.loading = false;\n      this.content.errors.push(\"Could not load data at this time. Try again later.\");\n    });\n  }\n\n  getForm() {\n    this.loading = true;\n    this.apiService.postData(`/forms/laboratory/get`, {\n      createdDate: new Date(this.content.forms.createdDate),\n      formType: this.content.FormsType_Incidence,\n      formName: this.content.formName\n    }).subscribe(res => {\n      console.log(res);\n      this.loading = false;\n\n      if (res != null) {\n        this.content.forms.createdDate = this.datePipe.transform(res.createdDate, \"yyyy-MM\");\n        this.content.forms.district.id = res.district.id;\n        let timer = 0;\n        res.labFormValues.forEach(function (fd) {\n          setTimeout(() => {\n            if ($(`#animal_${fd.testTypes.id}_${fd.animalCategory.id}_noOfCase`).length <= 0) {\n              timer++;\n            } else {\n              $(`#animal_${fd.testTypes.id}_${fd.animalCategory.id}_total`).val(fd.totalValue);\n              $(`#animal_${fd.testTypes.id}_${fd.animalCategory.id}_noOfCase`).val(fd.noOfPositiveCases);\n              clearTimeout();\n            }\n          }, timer);\n        });\n\n        if (this.content.forms.isLocked) {\n          this.content.fileLocked = true;\n        }\n\n        this.getSelectedValues();\n\n        if (res.isLocked) {\n          if (this.authService.userValue.userRoles.includes(\"Head Office\") || this.authService.userValue.userRoles.includes(\"admin\")) {\n            this.content.fileLocked = false;\n          } else {\n            this.content.fileLocked = true;\n          }\n        }\n      } else {\n        this.content.forms.currentStep = null;\n        this.content.fileLocked = false;\n      }\n    }, error => {\n      this.loading = false;\n    });\n  }\n\n  getSelectedValues() {\n    var timer = 1;\n\n    if (!this.content.forms.district) {\n      setTimeout(() => {\n        if (this.content.forms.district) {\n          clearTimeout();\n        } else {\n          timer++;\n        }\n      }, timer);\n    }\n\n    this.content.forms.createdDate = this.datePipe.transform(this.content.forms.createdDate, \"yyyy-MM\");\n  }\n\n  getSamples() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.loading = true;\n\n      _this5.apiService.getData(`/samples`, null).subscribe(res => {\n        _this5.loading = false;\n\n        if (!res) {\n          _this5.toast.error(\"Could not connect to Server. Try again after sometime.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n        } else {\n          if (res.length <= 0) {\n            _this5.content.errors.push(\"No Samples test cases found. Try again after sometime.\");\n          }\n\n          res.forEach(function (samples) {\n            samples.testTypes.forEach(function (testCase) {\n              testCase.subTests.forEach(function (_sub) {\n                _sub.total = 0;\n                _sub.totalNoOfveCases = 0;\n              });\n            });\n          });\n          _this5.content.samples = [] = res;\n\n          _this5.getColumnHeaders();\n        }\n      }, error => {\n        _this5.loading = false;\n\n        _this5.content.errors.push(\"Could not load data at this time. Try again later.\");\n      });\n    })();\n  }\n\n  getFixedHeaders() {\n    let flag = 0;\n    this.content.samples.forEach(sample => {\n      sample.testTypes.forEach(testType1 => {\n        testType1.subTests.forEach(testType2 => {\n          if (testType2.name != null && flag == 0) {\n            this.content.fixedColumnHeader.push(\"Test Type 2\");\n            flag = 1;\n          }\n        });\n      });\n    });\n  }\n\n  getColumnHeaders() {\n    if (this.content.samples.length > 0) {\n      this.content.fixedColumnHeader.push(\"Samples\");\n      this.content.samples.every(sample => {\n        if (sample.testTypes.length > 0) {\n          this.content.fixedColumnHeader.push(\"Test Type 1\");\n          return false;\n        }\n\n        return true;\n      });\n    }\n\n    this.getFixedHeaders();\n    this.content.categories.forEach(category => {\n      this.content.columnHeader.push(category.name);\n    });\n    this.content.columnHeader.push(\"Total\");\n  }\n\n  save() {\n    this.loading = true;\n    let $this = this;\n    this.loading = false;\n    this.content.forms.animals = this.content.animals;\n\n    var _obj = this.createPostObject($this);\n\n    console.log(\"save\", _obj);\n    this.apiService.postData(this.content.apiLink, _obj).subscribe(res => {\n      this.loading = false;\n\n      if (res) {\n        this.getForm();\n      }\n    }, error => {\n      this.loading = false;\n    });\n  }\n\n  createPostObject($this) {\n    var _obj = {\n      createdDate: this.content.forms.createdDate,\n      district: this.content.forms.district,\n      samples: this.content.samples,\n      remarks: this.content.forms.remarks,\n      formName: this.content.formName,\n      categories: this.content.categories\n    };\n\n    _obj.categories.forEach(function (_cat) {\n      _cat.tests = [];\n      $this.content.samples.forEach(function (_sample) {\n        _sample.testTypes.forEach(function (_testTypes) {\n          _testTypes.subTests.forEach(function (_subTest) {\n            var _obj = {\n              testType: _subTest,\n              totalValue: $(`#animal_${_subTest.id}_${_cat.id}_total`).val(),\n              noOfPositiveCases: $(`#animal_${_subTest.id}_${_cat.id}_noOfCase`).val()\n            };\n            _obj.testType.sample = {};\n            $.extend(_obj.testType.sample, _sample);\n            delete _obj.testType.sample.testTypes;\n\n            _cat.tests.push(_obj);\n          });\n        });\n      });\n    });\n\n    return _obj;\n  }\n\n};\nLaboratoryExaminationComponent = __decorate([Component({\n  selector: 'app-laboratory-examination',\n  templateUrl: './laboratory-examination.component.html',\n  styleUrls: ['./laboratory-examination.component.css']\n})], LaboratoryExaminationComponent);\nexport { LaboratoryExaminationComponent };","map":{"version":3,"sources":["D:/Projects/DiseaseMIS/Disease_UI/Disease_UI/UI/src/app/views/forms/laboratory-examination/laboratory-examination.component.ts"],"names":["__decorate","Component","LaboratoryExaminationComponent","constructor","apiService","toast","datePipe","authService","content","name","errors","categories","samples","forms","district","fixedColumnHeader","columnHeader","apiLink","user","loading","userValue","ngOnInit","getDistricts","getAnimalCategories","getSamples","ngAfterViewInit","getForm","getData","subscribe","res","error","position","autoClose","data","length","errorMessage","districts","console","log","push","forEach","_cat","subTests","approveEdit","putData","id","success","postData","createdDate","Date","formType","FormsType_Incidence","formName","transform","timer","labFormValues","fd","setTimeout","$","testTypes","animalCategory","val","totalValue","noOfPositiveCases","clearTimeout","isLocked","fileLocked","getSelectedValues","userRoles","includes","currentStep","testCase","_sub","total","totalNoOfveCases","getColumnHeaders","getFixedHeaders","flag","sample","testType1","testType2","every","category","save","$this","animals","_obj","createPostObject","remarks","tests","_sample","_testTypes","_subTest","testType","extend","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nlet LaboratoryExaminationComponent = class LaboratoryExaminationComponent {\r\n    constructor(apiService, toast, datePipe, authService) {\r\n        this.apiService = apiService;\r\n        this.toast = toast;\r\n        this.datePipe = datePipe;\r\n        this.authService = authService;\r\n        this.content = {\r\n            name: \"Laboratory Examination Form\",\r\n            errors: [],\r\n            categories: [],\r\n            samples: [],\r\n            forms: {\r\n                district: {}\r\n            },\r\n            fixedColumnHeader: [],\r\n            columnHeader: [],\r\n            apiLink: '/forms/laboratory',\r\n            user: {}\r\n        };\r\n        this.loading = false;\r\n        this.content.user = this.authService.userValue;\r\n    }\r\n    async ngOnInit() {\r\n        await this.getDistricts();\r\n        await this.getAnimalCategories();\r\n        await this.getSamples();\r\n    }\r\n    async ngAfterViewInit() {\r\n        await this.getForm();\r\n    }\r\n    async getDistricts() {\r\n        this.loading = true;\r\n        this.apiService.getData('/master/districts', null)\r\n            .subscribe((res) => {\r\n            this.loading = false;\r\n            if (!res) {\r\n                this.toast.error(\"Could not connect to Server. Try again after sometime.\", {\r\n                    position: 'top-right',\r\n                    autoClose: true\r\n                });\r\n            }\r\n            else {\r\n                if (res.data.length <= 0) {\r\n                    this.content.errorMessage = \"No Districts found. Click 'Add New' to add.\";\r\n                }\r\n                this.content.districts = res.data;\r\n                console.log(res.data);\r\n            }\r\n        }, error => {\r\n            this.loading = false;\r\n            this.content.errorMessage = \"Could not load data at this time. Try again later.\";\r\n        });\r\n    }\r\n    async getAnimalCategories() {\r\n        this.loading = true;\r\n        this.apiService.getData(`/master/animals/category`, null)\r\n            .subscribe((res) => {\r\n            this.loading = false;\r\n            if (!res) {\r\n                this.toast.error(\"Could not connect to Server. Try again after sometime.\", {\r\n                    position: 'top-right',\r\n                    autoClose: true\r\n                });\r\n            }\r\n            else {\r\n                if (res.length <= 0) {\r\n                    this.content.errors.push(\"No animal categories found.\");\r\n                }\r\n                this.content.categories = res;\r\n                this.content.categories.forEach(function (_cat) {\r\n                    _cat.subTests = [];\r\n                });\r\n            }\r\n        }, error => {\r\n            this.loading = false;\r\n            this.content.errors.push(\"Could not load data at this time. Try again later.\");\r\n        });\r\n    }\r\n    approveEdit() {\r\n        this.apiService.putData(`/forms/${this.content.forms.id}/toggleLabFormLock`, this.content.forms.id, null)\r\n            .subscribe((res) => {\r\n            if (!res) {\r\n                this.toast.error(\"Could not connect to Server. Try again after sometime.\", {\r\n                    position: 'top-right',\r\n                    autoClose: true\r\n                });\r\n            }\r\n            else {\r\n                this.toast.success(\"Form is unlocked, user can re-edit the form again.\", {\r\n                    position: 'top-right',\r\n                    autoClose: true\r\n                });\r\n                this.getForm();\r\n            }\r\n        }, error => {\r\n            this.loading = false;\r\n            this.content.errors.push(\"Could not load data at this time. Try again later.\");\r\n        });\r\n    }\r\n    getForm() {\r\n        this.loading = true;\r\n        this.apiService.postData(`/forms/laboratory/get`, {\r\n            createdDate: new Date(this.content.forms.createdDate),\r\n            formType: this.content.FormsType_Incidence,\r\n            formName: this.content.formName\r\n        }).subscribe((res) => {\r\n            console.log(res);\r\n            this.loading = false;\r\n            if (res != null) {\r\n                this.content.forms.createdDate = this.datePipe.transform(res.createdDate, \"yyyy-MM\");\r\n                this.content.forms.district.id = res.district.id;\r\n                let timer = 0;\r\n                res.labFormValues.forEach(function (fd) {\r\n                    setTimeout(() => {\r\n                        if ($(`#animal_${fd.testTypes.id}_${fd.animalCategory.id}_noOfCase`).length <= 0) {\r\n                            timer++;\r\n                        }\r\n                        else {\r\n                            $(`#animal_${fd.testTypes.id}_${fd.animalCategory.id}_total`).val(fd.totalValue);\r\n                            $(`#animal_${fd.testTypes.id}_${fd.animalCategory.id}_noOfCase`).val(fd.noOfPositiveCases);\r\n                            clearTimeout();\r\n                        }\r\n                    }, timer);\r\n                });\r\n                if (this.content.forms.isLocked) {\r\n                    this.content.fileLocked = true;\r\n                }\r\n                this.getSelectedValues();\r\n                if (res.isLocked) {\r\n                    if (this.authService.userValue.userRoles.includes(\"Head Office\")\r\n                        || this.authService.userValue.userRoles.includes(\"admin\")) {\r\n                        this.content.fileLocked = false;\r\n                    }\r\n                    else {\r\n                        this.content.fileLocked = true;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.content.forms.currentStep = null;\r\n                this.content.fileLocked = false;\r\n            }\r\n        }, error => {\r\n            this.loading = false;\r\n        });\r\n    }\r\n    getSelectedValues() {\r\n        var timer = 1;\r\n        if (!this.content.forms.district) {\r\n            setTimeout(() => {\r\n                if (this.content.forms.district) {\r\n                    clearTimeout();\r\n                }\r\n                else {\r\n                    timer++;\r\n                }\r\n            }, timer);\r\n        }\r\n        this.content.forms.createdDate = this.datePipe.transform(this.content.forms.createdDate, \"yyyy-MM\");\r\n    }\r\n    async getSamples() {\r\n        this.loading = true;\r\n        this.apiService.getData(`/samples`, null)\r\n            .subscribe((res) => {\r\n            this.loading = false;\r\n            if (!res) {\r\n                this.toast.error(\"Could not connect to Server. Try again after sometime.\", {\r\n                    position: 'top-right',\r\n                    autoClose: true\r\n                });\r\n            }\r\n            else {\r\n                if (res.length <= 0) {\r\n                    this.content.errors.push(\"No Samples test cases found. Try again after sometime.\");\r\n                }\r\n                res.forEach(function (samples) {\r\n                    samples.testTypes.forEach(function (testCase) {\r\n                        testCase.subTests.forEach(function (_sub) {\r\n                            _sub.total = 0;\r\n                            _sub.totalNoOfveCases = 0;\r\n                        });\r\n                    });\r\n                });\r\n                this.content.samples = [] = res;\r\n                this.getColumnHeaders();\r\n            }\r\n        }, error => {\r\n            this.loading = false;\r\n            this.content.errors.push(\"Could not load data at this time. Try again later.\");\r\n        });\r\n    }\r\n    getFixedHeaders() {\r\n        let flag = 0;\r\n        this.content.samples.forEach((sample) => {\r\n            sample.testTypes.forEach((testType1) => {\r\n                testType1.subTests.forEach((testType2) => {\r\n                    if (testType2.name != null && flag == 0) {\r\n                        this.content.fixedColumnHeader.push(\"Test Type 2\");\r\n                        flag = 1;\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    getColumnHeaders() {\r\n        if (this.content.samples.length > 0) {\r\n            this.content.fixedColumnHeader.push(\"Samples\");\r\n            this.content.samples.every((sample) => {\r\n                if (sample.testTypes.length > 0) {\r\n                    this.content.fixedColumnHeader.push(\"Test Type 1\");\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n        this.getFixedHeaders();\r\n        this.content.categories.forEach((category) => {\r\n            this.content.columnHeader.push(category.name);\r\n        });\r\n        this.content.columnHeader.push(\"Total\");\r\n    }\r\n    save() {\r\n        this.loading = true;\r\n        let $this = this;\r\n        this.loading = false;\r\n        this.content.forms.animals = this.content.animals;\r\n        var _obj = this.createPostObject($this);\r\n        console.log(\"save\", _obj);\r\n        this.apiService.postData(this.content.apiLink, _obj).subscribe((res) => {\r\n            this.loading = false;\r\n            if (res) {\r\n                this.getForm();\r\n            }\r\n        }, error => {\r\n            this.loading = false;\r\n        });\r\n    }\r\n    createPostObject($this) {\r\n        var _obj = {\r\n            createdDate: this.content.forms.createdDate,\r\n            district: this.content.forms.district,\r\n            samples: this.content.samples,\r\n            remarks: this.content.forms.remarks,\r\n            formName: this.content.formName,\r\n            categories: this.content.categories\r\n        };\r\n        _obj.categories.forEach(function (_cat) {\r\n            _cat.tests = [];\r\n            $this.content.samples.forEach(function (_sample) {\r\n                _sample.testTypes.forEach(function (_testTypes) {\r\n                    _testTypes.subTests.forEach(function (_subTest) {\r\n                        var _obj = {\r\n                            testType: _subTest,\r\n                            totalValue: $(`#animal_${_subTest.id}_${_cat.id}_total`).val(),\r\n                            noOfPositiveCases: $(`#animal_${_subTest.id}_${_cat.id}_noOfCase`).val()\r\n                        };\r\n                        _obj.testType.sample = {};\r\n                        $.extend(_obj.testType.sample, _sample);\r\n                        delete _obj.testType.sample.testTypes;\r\n                        _cat.tests.push(_obj);\r\n                    });\r\n                });\r\n            });\r\n        });\r\n        return _obj;\r\n    }\r\n};\r\nLaboratoryExaminationComponent = __decorate([\r\n    Component({\r\n        selector: 'app-laboratory-examination',\r\n        templateUrl: './laboratory-examination.component.html',\r\n        styleUrls: ['./laboratory-examination.component.css']\r\n    })\r\n], LaboratoryExaminationComponent);\r\nexport { LaboratoryExaminationComponent };\r\n"]},"metadata":{},"sourceType":"module"}