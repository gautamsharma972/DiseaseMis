{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Projects\\\\DiseaseMIS\\\\Disease_UI\\\\Disease_UI\\\\UI\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../_services/api.service\";\nimport * as i2 from \"@ngneat/hot-toast\";\nimport * as i3 from \"@angular/common\";\n\nfunction NonInfectiousComponent_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 14);\n  }\n}\n\nfunction NonInfectiousComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \" Loading\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NonInfectiousComponent_ng_template_13_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function NonInfectiousComponent_ng_template_13_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.save();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.saveFormTitle, \" \");\n  }\n}\n\nfunction NonInfectiousComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NonInfectiousComponent_ng_template_13_button_0_Template, 2, 1, \"button\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.loading);\n  }\n}\n\nfunction NonInfectiousComponent_p_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 18);\n    i0.ɵɵtext(1, \"loading form...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NonInfectiousComponent_div_18_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 29);\n  }\n}\n\nfunction NonInfectiousComponent_div_18_i_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 29);\n  }\n}\n\nfunction NonInfectiousComponent_div_18_i_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 29);\n  }\n}\n\nfunction NonInfectiousComponent_div_18_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelement(2, \"i\", 35);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r18.content.errors[0], \" \");\n  }\n}\n\nfunction NonInfectiousComponent_div_18_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, NonInfectiousComponent_div_18_div_13_div_1_Template, 4, 1, \"div\", 31);\n    i0.ɵɵelementStart(2, \"p\", 32);\n    i0.ɵɵtext(3, \"Cases from Non-Infectious Diseases\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"app-disease-form\", 33);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.content.errors.length > 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"content\", ctx_r15.content)(\"formType\", ctx_r15.formType)(\"appDisable\", ctx_r15.content.forms.isLocked);\n  }\n}\n\nfunction NonInfectiousComponent_div_18_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelement(2, \"i\", 35);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.content.errors[0], \" \");\n  }\n}\n\nfunction NonInfectiousComponent_div_18_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, NonInfectiousComponent_div_18_div_14_div_1_Template, 4, 1, \"div\", 31);\n    i0.ɵɵelementStart(2, \"p\", 32);\n    i0.ɵɵtext(3, \"Mortality from Non-Infectious Diseases\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"app-disease-form\", 33);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.content.errors.length > 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"content\", ctx_r16.content)(\"formType\", ctx_r16.formType)(\"appDisable\", ctx_r16.content.forms.isLocked);\n  }\n}\n\nfunction NonInfectiousComponent_div_18_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelement(2, \"i\", 35);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r20.content.errors[0], \" \");\n  }\n}\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nfunction NonInfectiousComponent_div_18_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, NonInfectiousComponent_div_18_div_15_div_1_Template, 4, 1, \"div\", 31);\n    i0.ɵɵelementStart(2, \"p\", 32);\n    i0.ɵɵtext(3, \"Add Remarks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"textarea\", 37);\n    i0.ɵɵlistener(\"ngModelChange\", function NonInfectiousComponent_div_18_div_15_Template_textarea_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return ctx_r21.content.forms.remarks = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.content.errors.length > 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"appDisable\", ctx_r17.content.forms.isLocked)(\"ngModel\", ctx_r17.content.forms.remarks)(\"ngModelOptions\", i0.ɵɵpureFunction0(4, _c0));\n  }\n}\n\nfunction NonInfectiousComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function NonInfectiousComponent_div_18_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      ctx_r23.getIncidenceForm(false);\n      return ctx_r23.openTab = \"incidence\";\n    });\n    i0.ɵɵtemplate(3, NonInfectiousComponent_div_18_i_3_Template, 1, 0, \"i\", 22);\n    i0.ɵɵtext(4, \" Incidence \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 23, 24);\n    i0.ɵɵlistener(\"click\", function NonInfectiousComponent_div_18_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext();\n      ctx_r25.openTab = \"mortality\";\n      return ctx_r25.getMortalityForm();\n    });\n    i0.ɵɵtemplate(7, NonInfectiousComponent_div_18_i_7_Template, 1, 0, \"i\", 22);\n    i0.ɵɵtext(8, \" Mortality \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function NonInfectiousComponent_div_18_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.openTab = \"remarks\";\n    });\n    i0.ɵɵtemplate(10, NonInfectiousComponent_div_18_i_10_Template, 1, 0, \"i\", 22);\n    i0.ɵɵtext(11, \" Remarks \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, NonInfectiousComponent_div_18_div_13_Template, 5, 4, \"div\", 27);\n    i0.ɵɵtemplate(14, NonInfectiousComponent_div_18_div_14_Template, 5, 4, \"div\", 28);\n    i0.ɵɵtemplate(15, NonInfectiousComponent_div_18_div_15_Template, 5, 5, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.openTab == \"incidence\" ? \"bg-base-200 tab-active\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.content.forms.currentStep != null || ctx_r5.content.forms.currentStep == \"incidence\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.openTab === \"mortality\" ? \"bg-base-200 tab-active\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.content.forms.currentStep != null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.openTab === \"remarks\" ? \"bg-base-200 tab-active\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.content.forms.currentStep == \"remarks\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.openTab == \"incidence\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.openTab == \"mortality\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.openTab == \"remarks\");\n  }\n}\n\nfunction NonInfectiousComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \" Loading\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NonInfectiousComponent_ng_template_21_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function NonInfectiousComponent_ng_template_21_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return ctx_r28.save();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r27.saveFormTitle, \" \");\n  }\n}\n\nfunction NonInfectiousComponent_ng_template_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NonInfectiousComponent_ng_template_21_button_0_Template, 2, 1, \"button\", 38);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.loading);\n  }\n}\n\nexport let NonInfectiousComponent = /*#__PURE__*/(() => {\n  class NonInfectiousComponent {\n    constructor(apiService, toast, datePipe) {\n      this.apiService = apiService;\n      this.toast = toast;\n      this.datePipe = datePipe;\n      this.content = {\n        name: \"Animal Disease Incidence Report\",\n        errors: [],\n        animals: [{\n          symptoms: []\n        }],\n        diseases: [],\n        fixedColumnHeader: [],\n        columnHeader: [],\n        forms: {\n          district: {},\n          institute: {},\n          incharge: {},\n          diseases: []\n        },\n        districts: [],\n        institutes: [],\n        incharges: [],\n        apiLink: '/forms',\n        fileLocked: false\n      };\n      this.saveFormTitle = 'Save and Continue';\n      this.loading = false;\n      this.formType = \"Incidence\";\n      this.openTab = \"incidence\";\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this.getAnimals();\n        yield _this.getDiseases();\n      })();\n    }\n\n    ngAfterViewInit() {\n      this.getIncidenceForm(false);\n    }\n\n    getIncidenceForm(isAfterSaveLoad) {\n      let $this = this;\n      this.loading = true;\n      this.apiService.getData(`/forms/3/noninfectious`, {\n        formType: 3,\n        formName: \"noninfectious\"\n      }).subscribe(res => {\n        this.loading = false;\n\n        if (res != null) {\n          this.content.forms = res;\n          let timer = 0;\n          $this.content.forms.formDiseaseValues.forEach(function (fd) {\n            setTimeout(() => {\n              if ($(`#animal_${fd.symptom.id}_${fd.animal.id}`).length <= 0) {\n                timer++;\n              } else {\n                $(`#animal_${fd.symptom.id}_${fd.animal.id}`).val(fd.value);\n                clearTimeout();\n              }\n            }, timer);\n          });\n\n          if (isAfterSaveLoad) {\n            if (this.content.forms.currentStep == \"incidence\") {\n              this.openTab = \"mortality\";\n            } else if (this.content.forms.currentStep == \"mortality\") {\n              this.saveFormTitle = \"Submit\";\n              this.openTab = \"remarks\";\n            } else if (this.content.forms.currentStep == \"remarks\" || this.content.forms.currentStep == \"completed\") {\n              this.openTab = \"completed\";\n            }\n          }\n\n          if (this.content.forms.isLocked) {\n            this.content.fileLocked = true;\n          }\n\n          this.getSelectedValues();\n        }\n      }, error => {\n        this.loading = false;\n      });\n    }\n\n    getSelectedValues() {\n      var timer = 1;\n\n      if (!this.content.forms.district) {\n        setTimeout(() => {\n          if (this.content.forms.district) {\n            clearTimeout();\n          } else {\n            timer++;\n          }\n        }, timer);\n      }\n\n      this.content.districts.push(this.content.forms.district);\n      $('#selDistrict').val(this.content.forms.district.id);\n      this.content.institutes = [] = this.content.districts.filter(a => a.id == this.content.forms.district.id)[0].institutes;\n      this.content.incharges = [] = this.content.institutes.filter(a => a.id == this.content.forms.institute.id)[0].incharges;\n      $('#selInstitute').val(this.content.forms.institute.id);\n      $('#selIncharge').val(this.content.incharges[0].id);\n      $('#createdDate').val(this.datePipe.transform(this.content.forms.createdDate, \"MMM yyyy\"));\n    }\n\n    getMortalityForm() {\n      let $this = this;\n      this.loading = true;\n      this.apiService.getData(`/forms/4/noninfectious`, {\n        formType: 4,\n        formName: \"incidence\"\n      }).subscribe(res => {\n        this.loading = false;\n\n        if (res != null) {\n          this.content.forms = res;\n          let timer = 0;\n          $this.content.forms.formDiseaseValues.forEach(function (fd) {\n            setTimeout(() => {\n              if ($(`#animal_${fd.symptom.id}_${fd.animal.id}`).length <= 0) {\n                timer++;\n              } else {\n                $(`#animal_${fd.symptom.id}_${fd.animal.id}`).val(fd.value);\n                clearTimeout();\n              }\n            }, timer);\n          });\n          this.getSelectedValues();\n        }\n      }, error => {\n        this.loading = false;\n      });\n    }\n\n    calcTotal(symptom) {\n      var sum = 0;\n      $(`.animal_${symptom.id}`).each(function () {\n        // @ts-ignore\n        sum += +$(this).val();\n      });\n      $(`.animal_${symptom.id}_total`).val(sum);\n    }\n\n    getAnimals() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        _this2.loading = true;\n\n        _this2.apiService.getData(`/master/animals`, null).subscribe(res => {\n          _this2.loading = false;\n\n          if (!res) {\n            _this2.toast.error(\"Could not connect to Server. Try again after sometime.\", {\n              position: 'top-right',\n              autoClose: true\n            });\n          } else {\n            if (res.length <= 0) {\n              _this2.content.errors.push(\"No animals found.\");\n            }\n\n            _this2.content.animals = res;\n\n            _this2.content.animals.forEach(function (animal) {\n              animal.symptoms = [];\n              animal.disease = {};\n            });\n          }\n        }, error => {\n          _this2.loading = false;\n\n          _this2.content.errors.push(\"Could not load data at this time. Try again later.\");\n        });\n      })();\n    }\n\n    getDiseases() {\n      this.loading = true;\n      this.apiService.getData(`/diseases/byCategory/1`, null).subscribe(res => {\n        this.loading = false;\n\n        if (!res) {\n          this.toast.error(\"Could not connect to Server. Try again after sometime.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n        } else {\n          if (res.length <= 0) {\n            this.content.errors.push(\"No Diseases found!!\");\n          }\n\n          res.forEach(function (disease) {\n            disease.symptoms.forEach(function (_sym) {\n              _sym.total = 0;\n\n              _sym.subSymptoms.forEach(function (_sub) {\n                _sub.total = 0;\n              });\n            });\n          });\n          this.content.diseases = res;\n          this.getColumnHeaders();\n        }\n      }, error => {\n        this.loading = false;\n        this.content.errors.push(\"Could not load data at this time. Try again later.\");\n      });\n    }\n\n    getFixedHeaders() {\n      let flag = 0;\n      this.content.diseases.forEach(disease => {\n        disease.symptoms.forEach(symptom => {\n          symptom.subSymptoms.forEach(subSymptom => {\n            if (subSymptom.name != null && flag == 0) {\n              this.content.fixedColumnHeader.push(\"Sub Symptoms\");\n              flag = 1;\n            }\n          });\n        });\n      });\n    }\n\n    getColumnHeaders() {\n      if (this.content.diseases.length > 0) {\n        this.content.fixedColumnHeader.push(\"Diseases\");\n        this.content.diseases.every(disease => {\n          if (disease.symptoms.length > 0) {\n            this.content.fixedColumnHeader.push(\"Symptoms\");\n            return false;\n          }\n\n          return true;\n        });\n      }\n\n      this.getFixedHeaders();\n      this.content.animals.forEach(animal => {\n        this.content.columnHeader.push(animal.name);\n      });\n      this.content.columnHeader.push(\"Total\");\n    }\n\n    save() {\n      let $this = this;\n      this.loading = false;\n      this.content.forms.animals = this.content.animals;\n\n      var _obj = this.createPostObject($this);\n\n      this.apiService.postData(this.content.apiLink, _obj).subscribe(res => {\n        this.loading = false;\n\n        if (res) {\n          this.getIncidenceForm(true);\n        }\n      });\n    }\n\n    createPostObject($this) {\n      var _obj = {\n        formType: this.openTab == 'incidence' ? 3 : 4,\n        createdDate: this.content.forms.createdDate,\n        district: this.content.forms.district,\n        institute: this.content.forms.institute,\n        incharge: this.content.forms.incharge,\n        animals: this.content.animals,\n        currentStep: this.openTab,\n        remarks: this.content.forms.remarks,\n        name: \"NonInfectious\"\n      };\n\n      _obj.animals.forEach(function (_animal) {\n        _animal.symptoms = [];\n        $this.content.diseases.forEach(function (disease) {\n          disease.symptoms.forEach(function (symptom) {\n            var _obj = {\n              symptom: symptom,\n              value: $(`#animal_${symptom.id}_${_animal.id}`).val()\n            };\n            _obj.symptom.disease = {};\n            $.extend(_obj.symptom.disease, disease);\n            delete _obj.symptom.disease.symptoms;\n\n            _animal.symptoms.push(_obj);\n          });\n        });\n      });\n\n      return _obj;\n    }\n\n  }\n\n  NonInfectiousComponent.ɵfac = function NonInfectiousComponent_Factory(t) {\n    return new (t || NonInfectiousComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.HotToastService), i0.ɵɵdirectiveInject(i3.DatePipe));\n  };\n\n  NonInfectiousComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NonInfectiousComponent,\n    selectors: [[\"app-non-infectious\"]],\n    decls: 22,\n    vars: 8,\n    consts: [[1, \"container\", \"mt-5\", \"grid\", \"grid-cols-2\"], [1, \"card-title\"], [1, \"flex-column\"], [\"class\", \"fa fa-lock text-yellow-500 fa-1x place-self-end\", 4, \"ngIf\"], [1, \"text-sm\", \"text-gray-500\", \"text-bold-0\"], [1, \"text-red-500\"], [1, \"flex\", \"justify-self-end\"], [\"class\", \"btn btn-sqaure loading align-center\", 4, \"ngIf\"], [3, \"ngIf\"], [1, \"my\", \"md:min-w-full\", \"mt-4\"], [\"reportForm\", \"ngForm\"], [\"class\", \"w-full loading\", 4, \"ngIf\"], [\"class\", \"grid mt-5 w-full mb-3\", 4, \"ngIf\"], [1, \"flex\", \"flex-row\", \"justify-end\"], [1, \"fa\", \"fa-lock\", \"text-yellow-500\", \"fa-1x\", \"place-self-end\"], [1, \"btn\", \"btn-sqaure\", \"loading\", \"align-center\"], [\"id\", \"btnPrimarySave\", \"class\", \"btn btn-primary btnSave btn-md\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"btnPrimarySave\", 1, \"btn\", \"btn-primary\", \"btnSave\", \"btn-md\", 3, \"click\"], [1, \"w-full\", \"loading\"], [1, \"grid\", \"mt-5\", \"w-full\", \"mb-3\"], [1, \"tabs\", \"z-10\", \"-mb-px\"], [\"data-tip\", \"Click here for Incidence cases\", 1, \"tab\", \"tab-bordered\", \"btn-md\", \"font-semibold\", 3, \"ngClass\", \"click\"], [\"class\", \"fa fa-check fa-2x mr-2 text-green-500\", 4, \"ngIf\"], [\"data-tip\", \"Click here for Mortality cases\", 1, \"tab\", \"btn-md\", \"font-semibold\", \"tab-bordered\", \"tooltip\", \"tooltip-warning\", 3, \"ngClass\", \"click\"], [\"btnMortality\", \"\"], [\"data-tip\", \"Click here for Remarks\", 1, \"tab\", \"btn-md\", \"font-semibold\", \"tab-bordered\", \"tooltip\", \"tooltip-warning\", 3, \"ngClass\", \"click\"], [1, \"tab\", \"tab-bordered\", \"flex-1\", \"cursor-default\"], [\"class\", \"w-full mt-5 overflow-hidden\", 4, \"ngIf\"], [\"class\", \"mt-5 w-full overflow-hidden\", 4, \"ngIf\"], [1, \"fa\", \"fa-check\", \"fa-2x\", \"mr-2\", \"text-green-500\"], [1, \"w-full\", \"mt-5\", \"overflow-hidden\"], [\"class\", \"mt-5 alert shadow alert-error\", 4, \"ngIf\"], [1, \"font-semibold\", \"mb-3\"], [3, \"content\", \"formType\", \"appDisable\"], [1, \"mt-5\", \"alert\", \"shadow\", \"alert-error\"], [1, \"fa\", \"fa-exclamation-triangle\", \"text-yellow\"], [1, \"mt-5\", \"w-full\", \"overflow-hidden\"], [\"rows\", \"4\", 1, \"form-input\", \"rounded\", \"w-full\", \"focus:ring\", 3, \"appDisable\", \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"class\", \"btn btnSave btn-primary btn-md\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btnSave\", \"btn-primary\", \"btn-md\", 3, \"click\"]],\n    template: function NonInfectiousComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h1\", 1);\n        i0.ɵɵelementStart(2, \"span\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵtemplate(4, NonInfectiousComponent_i_4_Template, 1, 0, \"i\", 3);\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"span\", 4);\n        i0.ɵɵtext(7, \"'\");\n        i0.ɵɵelementStart(8, \"i\", 5);\n        i0.ɵɵtext(9, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \"' marked fields are mandatory.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 6);\n        i0.ɵɵtemplate(12, NonInfectiousComponent_span_12_Template, 2, 0, \"span\", 7);\n        i0.ɵɵtemplate(13, NonInfectiousComponent_ng_template_13_Template, 1, 1, \"ng-template\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"hr\", 9);\n        i0.ɵɵelementStart(15, \"form\", null, 10);\n        i0.ɵɵtemplate(17, NonInfectiousComponent_p_17_Template, 2, 0, \"p\", 11);\n        i0.ɵɵtemplate(18, NonInfectiousComponent_div_18_Template, 16, 9, \"div\", 12);\n        i0.ɵɵelementStart(19, \"div\", 13);\n        i0.ɵɵtemplate(20, NonInfectiousComponent_span_20_Template, 2, 0, \"span\", 7);\n        i0.ɵɵtemplate(21, NonInfectiousComponent_ng_template_21_Template, 1, 1, \"ng-template\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.content.name, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.content.fileLocked);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.content.fileLocked);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.content.fileLocked);\n      }\n    },\n    styles: [\"\"]\n  });\n  return NonInfectiousComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}