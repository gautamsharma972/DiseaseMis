{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../_services/api.service\";\nimport * as i2 from \"@ngneat/hot-toast\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = [\"InchargesModal\"];\n\nfunction EditInchargesComponent_div_2_select_13_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r7.name, \" \");\n  }\n}\n\nconst _c1 = function () {\n  return {\n    standalone: true\n  };\n};\n\nfunction EditInchargesComponent_div_2_select_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function EditInchargesComponent_div_2_select_13_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.content.Incharge.institute.id = $event;\n    });\n    i0.ɵɵelementStart(1, \"option\", 22);\n    i0.ɵɵtext(2, \"Select\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, EditInchargesComponent_div_2_select_13_option_3_Template, 2, 2, \"option\", 23);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.content.Incharge.institute.id)(\"ngModelOptions\", i0.ɵɵpureFunction0(3, _c1));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.content.mappingData);\n  }\n}\n\nfunction EditInchargesComponent_div_2_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1, \" Loading\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditInchargesComponent_div_2_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function EditInchargesComponent_div_2_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.saveIncharge();\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditInchargesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"h3\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"hr\", 6);\n    i0.ɵɵelementStart(5, \"form\", null, 7);\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵelementStart(8, \"label\", 9);\n    i0.ɵɵtext(9, \" Name \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function EditInchargesComponent_div_2_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.content.Incharge.name = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"label\", 11);\n    i0.ɵɵtext(12, \" Select Institute \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, EditInchargesComponent_div_2_select_13_Template, 4, 4, \"select\", 12);\n    i0.ɵɵelementStart(14, \"label\", 13);\n    i0.ɵɵtext(15, \" Mobile No \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function EditInchargesComponent_div_2_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.content.Incharge.phone = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"label\", 15);\n    i0.ɵɵtext(18, \" Designation \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function EditInchargesComponent_div_2_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.content.Incharge.designation = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 17);\n    i0.ɵɵtemplate(21, EditInchargesComponent_div_2_span_21_Template, 2, 0, \"span\", 18);\n    i0.ɵɵtemplate(22, EditInchargesComponent_div_2_button_22_Template, 2, 0, \"button\", 19);\n    i0.ɵɵelementStart(23, \"label\", 20);\n    i0.ɵɵtext(24, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.content.title);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.content.Incharge.name)(\"ngModelOptions\", i0.ɵɵpureFunction0(10, _c1));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.content.Incharge.institute != undefined);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.content.Incharge.phone)(\"ngModelOptions\", i0.ɵɵpureFunction0(11, _c1));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.content.Incharge.designation)(\"ngModelOptions\", i0.ɵɵpureFunction0(12, _c1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSaveLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isSaveLoading);\n  }\n}\n\nexport let EditInchargesComponent = /*#__PURE__*/(() => {\n  class EditInchargesComponent {\n    constructor(apiService, toast, router) {\n      this.apiService = apiService;\n      this.toast = toast;\n      this.router = router;\n      this.content = {};\n      this.isSaveLoading = false;\n    }\n\n    ngOnInit() {}\n\n    saveIncharge() {\n      this.isSaveLoading = true;\n\n      if (this.content.Incharge.name == undefined && this.content.Incharge.institute.id == undefined && this.content.Incharge.phone == undefined && this.content.Incharge.designation == undefined) {\n        this.toast.error(\"Some Fields are Empty!! Fill all the Fields and save!\", {\n          position: 'top-right',\n          autoClose: true\n        });\n        this.isSaveLoading = false;\n      } else {\n        this.OperateAPICall(this.content.Incharge, this.districtModal);\n      }\n    }\n\n    OperateAPICall(postData, modal) {\n      if (this.content.caller == 'POST') {\n        this.apiService.postData(this.content.apiLink, [postData]).subscribe(res => {\n          this.isSaveLoading = false;\n          this.toast.success(\"New item added\", {\n            position: 'top-right',\n            autoClose: true\n          });\n          modal.nativeElement.checked = false;\n        }, error => {\n          this.isSaveLoading = false;\n          this.toast.error(\"Error saving, try again after sometime.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n        });\n      } else {\n        postData.id = this.content.Incharge.id;\n        this.apiService.putData(`${this.content.apiLink}/${this.content.Incharge.id}`, this.content.Incharge.id, postData).subscribe(res => {\n          this.isSaveLoading = false;\n          this.toast.success(\"Saved successfully.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n          modal.nativeElement.checked = false;\n        }, error => {\n          this.isSaveLoading = false;\n          this.toast.error(\"Error saving, try again after sometime.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n        });\n      }\n    }\n\n  }\n\n  EditInchargesComponent.ɵfac = function EditInchargesComponent_Factory(t) {\n    return new (t || EditInchargesComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.HotToastService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  EditInchargesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditInchargesComponent,\n    selectors: [[\"edit-incharges-view\"]],\n    viewQuery: function EditInchargesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.districtModal = _t.first);\n      }\n    },\n    inputs: {\n      content: \"content\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[\"type\", \"checkbox\", \"id\", \"Incharge-modal\", 1, \"modal-toggle\"], [\"InchargesModal\", \"\"], [\"class\", \"modal\", 4, \"ngIf\"], [1, \"modal\"], [1, \"modal-box\"], [1, \"font-bold\", \"text-lg\"], [1, \"w-full\", \"mt-4\"], [\"form\", \"ngForm\"], [1, \"relative\", \"w-full\", \"mb-3\", \"relative\", \"w-full\", \"mb-3\"], [\"for\", \"content.Incharge.name\", 1, \"block\", \"mt-4\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"name\", \"content.Incharge.name\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"rounded\", \"focus:ring\", \"w-full\", \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [1, \"block\", \"text-gray-700\", \"mt-4\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"class\", \"rounded focus:ring w-full form-control form-control-sm\", \"required\", \"\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\", 4, \"ngIf\"], [\"for\", \"content.Incharge.mobile\", 1, \"block\", \"mt-4\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"type\", \"text\", \"placeholder\", \"Mobile\", \"name\", \"content.Incharge.phone\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"rounded\", \"focus:ring\", \"w-full\", \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"content.Incharge.designation\", 1, \"block\", \"mt-4\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"type\", \"text\", \"placeholder\", \"Designation\", \"name\", \"content.Incharge.designation\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"rounded\", \"focus:ring\", \"w-full\", \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [1, \"modal-action\"], [\"class\", \"btn btn-sqaure loading align-center\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"for\", \"Incharge-modal\", 1, \"btn\"], [\"required\", \"\", 1, \"rounded\", \"focus:ring\", \"w-full\", \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"value\", \"-1\", \"selected\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"btn\", \"btn-sqaure\", \"loading\", \"align-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function EditInchargesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0, 1);\n        i0.ɵɵtemplate(2, EditInchargesComponent_div_2_Template, 25, 13, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.content);\n      }\n    },\n    directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.RequiredValidator, i5.MinLengthValidator, i5.MaxLengthValidator, i5.NgControlStatus, i5.NgModel, i5.SelectControlValueAccessor, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i4.NgForOf],\n    encapsulation: 2\n  });\n  return EditInchargesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}