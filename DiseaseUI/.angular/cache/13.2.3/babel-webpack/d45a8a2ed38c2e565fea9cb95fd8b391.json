{"ast":null,"code":"import { DiseaseComponent } from '../disease.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../_services/api.service\";\nimport * as i2 from \"@ngneat/hot-toast\";\nimport * as i3 from \"../disease.component\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = [\"DiseasesModal\"];\n\nconst _c1 = function () {\n  return {\n    standalone: false\n  };\n};\n\nfunction EditDiseaseComponent_div_2_label_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\");\n    i0.ɵɵelementStart(1, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function EditDiseaseComponent_div_2_label_8_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.content.Diseases.diseaseType.id = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 22);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dType_r7 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.content.Diseases.diseaseType.id)(\"ngModelOptions\", i0.ɵɵpureFunction0(4, _c1))(\"value\", dType_r7.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dType_r7.type);\n  }\n}\n\nfunction EditDiseaseComponent_div_2_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"div\", 24);\n    i0.ɵɵelementStart(2, \"a\", 25);\n    i0.ɵɵlistener(\"click\", function EditDiseaseComponent_div_2_div_17_Template_a_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const i_r12 = restoredCtx.index;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.deleteField(i_r12);\n    });\n    i0.ɵɵelement(3, \"i\", 26);\n    i0.ɵɵtext(4, \" Delete Symptom \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 27);\n    i0.ɵɵtext(6, \" Symptoms \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function EditDiseaseComponent_div_2_div_17_Template_input_ngModelChange_7_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const i_r12 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.content.Diseases.symptoms[i_r12].name = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 27);\n    i0.ɵɵtext(9, \" Sub Symptom \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function EditDiseaseComponent_div_2_div_17_Template_input_ngModelChange_10_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const i_r12 = restoredCtx.index;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.content.Diseases.symptoms[i_r12].subSymptoms[0].name = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r12 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"Symptom_\", i_r12, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.content.Diseases.symptoms[i_r12].name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.content.Diseases.symptoms[i_r12].subSymptoms[0].name);\n  }\n}\n\nfunction EditDiseaseComponent_div_2_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1, \" Loading\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditDiseaseComponent_div_2_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function EditDiseaseComponent_div_2_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.save();\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditDiseaseComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"h3\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"hr\", 6);\n    i0.ɵɵelementStart(5, \"form\", null, 7);\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵtemplate(8, EditDiseaseComponent_div_2_label_8_Template, 4, 5, \"label\", 9);\n    i0.ɵɵelementStart(9, \"label\", 10);\n    i0.ɵɵtext(10, \" Name \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function EditDiseaseComponent_div_2_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.content.Diseases.name = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 12);\n    i0.ɵɵelementStart(13, \"a\", 13);\n    i0.ɵɵlistener(\"click\", function EditDiseaseComponent_div_2_Template_a_click_13_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.addField();\n    });\n    i0.ɵɵelement(14, \"i\", 14);\n    i0.ɵɵtext(15, \" Add new Symptoms \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 15);\n    i0.ɵɵtemplate(17, EditDiseaseComponent_div_2_div_17_Template, 11, 3, \"div\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 17);\n    i0.ɵɵtemplate(19, EditDiseaseComponent_div_2_span_19_Template, 2, 0, \"span\", 18);\n    i0.ɵɵtemplate(20, EditDiseaseComponent_div_2_button_20_Template, 2, 0, \"button\", 19);\n    i0.ɵɵelementStart(21, \"label\", 20);\n    i0.ɵɵtext(22, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.content.title);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.content.Diseases.diseaseTypes);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.content.Diseases.name);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.content.Diseases.symptoms);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSaveLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isSaveLoading);\n  }\n}\n\nexport let EditDiseaseComponent = /*#__PURE__*/(() => {\n  class EditDiseaseComponent {\n    constructor(apiService, toast, diseaseComponent) {\n      this.apiService = apiService;\n      this.toast = toast;\n      this.diseaseComponent = diseaseComponent;\n      this.content = {};\n      this.isSaveLoading = false;\n    }\n\n    ngOnInit() {}\n\n    save() {\n      this.isSaveLoading = true;\n\n      if (this.content.Diseases.name == undefined) {\n        this.toast.error(\"Name Field Empty!!\", {\n          position: 'top-right',\n          autoClose: true\n        });\n        this.isSaveLoading = false;\n      } else {\n        this.OperateAPICall(this.content.Diseases, this.diseaseModal);\n      }\n    }\n\n    OperateAPICall(postData, modal) {\n      if (this.content.caller == 'POST') {\n        this.apiService.postData(this.content.apiLink, [postData]).subscribe(res => {\n          if (res) {\n            this.isSaveLoading = false;\n            this.toast.success(\"New item added\", {\n              position: 'top-right',\n              autoClose: true\n            });\n            modal.nativeElement.checked = false;\n            this.diseaseComponent.get();\n          }\n        }, error => {\n          this.isSaveLoading = false;\n          this.toast.error(\"Error saving, try again after sometime.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n        });\n      } else {\n        postData.id = this.content.Diseases.id;\n        this.apiService.putData(`${this.content.apiLink}/${this.content.Diseases.id}`, this.content.Diseases.id, postData).subscribe(res => {\n          this.isSaveLoading = false;\n          this.toast.success(\"Saved successfully.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n          modal.nativeElement.checked = false;\n          this.diseaseComponent.get();\n        }, error => {\n          this.isSaveLoading = false;\n          this.toast.error(\"Error saving, try again after sometime.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n        });\n      }\n    }\n\n    addField() {\n      var _subSymptoms = [];\n\n      _subSymptoms.push({\n        name: null\n      });\n\n      var obj = {\n        name: null,\n        subSymptoms: _subSymptoms\n      };\n      this.content.Diseases.symptoms.push(obj);\n    }\n\n    deleteField(index) {\n      if (index > -1) {\n        this.content.Diseases.symptoms.splice(index, 1);\n      }\n    }\n\n  }\n\n  EditDiseaseComponent.ɵfac = function EditDiseaseComponent_Factory(t) {\n    return new (t || EditDiseaseComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.HotToastService), i0.ɵɵdirectiveInject(i3.DiseaseComponent));\n  };\n\n  EditDiseaseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditDiseaseComponent,\n    selectors: [[\"edit-disease-view\"]],\n    viewQuery: function EditDiseaseComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.diseaseModal = _t.first);\n      }\n    },\n    inputs: {\n      content: \"content\"\n    },\n    features: [i0.ɵɵProvidersFeature([DiseaseComponent])],\n    decls: 3,\n    vars: 1,\n    consts: [[\"type\", \"checkbox\", \"id\", \"Diseases-modal\", 1, \"modal-toggle\"], [\"DiseasesModal\", \"\"], [\"class\", \"modal\", 4, \"ngIf\"], [1, \"modal\"], [1, \"modal-box\"], [1, \"font-bold\", \"text-lg\"], [1, \"w-full\", \"mt-4\"], [\"form\", \"ngForm\"], [1, \"w-full\", \"mb-3\", \"mt-4\"], [4, \"ngFor\", \"ngForOf\"], [1, \"block\", \"text-gray-700\", \"mt-4\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"name\", \"Name\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"rounded\", \"focus:ring\", \"w-full\", \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [1, \"grid\", \"grid-cols-1\"], [1, \"text-blue-600\", \"cursor-pointer\", \"mt-4\", \"mb-2\", \"place-self-end\", 3, \"click\"], [1, \"fa-solid\", \"fa-plus\", \"text-l\", \"text-blue-600\"], [1, \"container\", \"overflow-y-auto\", \"scrollbar\", 2, \"height\", \"290px\"], [\"class\", \"card shadow mt-2 border\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-action\"], [\"class\", \"btn btn-square loading align-center\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"for\", \"Diseases-modal\", 1, \"btn\"], [\"type\", \"radio\", \"name\", \"diseaseType_\", 1, \"radio\", \"checked:bg-red-500\", 3, \"ngModel\", \"ngModelOptions\", \"value\", \"ngModelChange\"], [1, \"label-text\", \"ml-2\", \"mr-5\", \"text-gray-700\", \"font-bold\"], [1, \"card\", \"shadow\", \"mt-2\", \"border\"], [1, \"card-body\"], [1, \"text-red-400\", \"cursor-pointer\", \"place-self-end\", 3, \"click\"], [1, \"fa-solid\", \"fa-trash\", \"text-l\", \"text-red-400\"], [1, \"block\", \"text-gray-700\", \"mt-4\", \"text-sm\", \"font-bold\", \"mb-2\", \"w-full\"], [\"type\", \"text\", \"placeholder\", \"Symptom\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"rounded\", \"focus:ring\", \"w-full\", \"form-control\", \"form-control-sm\", 3, \"name\", \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Sub Symptom\", \"name\", \"subSymptom\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"rounded\", \"focus:ring\", \"w-full\", \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-square\", \"loading\", \"align-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function EditDiseaseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0, 1);\n        i0.ɵɵtemplate(2, EditDiseaseComponent_div_2_Template, 23, 6, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.content);\n      }\n    },\n    directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i4.NgForOf, i5.RadioControlValueAccessor, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i5.RequiredValidator, i5.MinLengthValidator, i5.MaxLengthValidator],\n    encapsulation: 2\n  });\n  return EditDiseaseComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}