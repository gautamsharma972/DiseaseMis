{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../_services/api.service\";\nimport * as i2 from \"@ngneat/hot-toast\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = [\"SamplesModal\"];\n\nfunction EditSampleComponent_div_2_div_15_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function EditSampleComponent_div_2_div_15_ng_template_12_Template_a_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const j_r10 = restoredCtx.index;\n      const i_r7 = i0.ɵɵnextContext().index;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.deleteField(2, i_r7, j_r10);\n    });\n    i0.ɵɵelement(1, \"i\", 22);\n    i0.ɵɵtext(2, \" Delete Test Type 2 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 23);\n    i0.ɵɵtext(4, \" Test Type 2 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function EditSampleComponent_div_2_div_15_ng_template_12_Template_input_ngModelChange_5_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const j_r10 = restoredCtx.index;\n      const i_r7 = i0.ɵɵnextContext().index;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.content.Samples.testTypes[i_r7].subTests[j_r10].name = $event;\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const j_r10 = ctx.index;\n    const i_r7 = i0.ɵɵnextContext().index;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"testTypes_\", i_r7, \"_subTest\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.content.Samples.testTypes[i_r7].subTests[j_r10].name);\n  }\n}\n\nfunction EditSampleComponent_div_2_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function EditSampleComponent_div_2_div_15_Template_a_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const i_r7 = restoredCtx.index;\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.deleteField(1, i_r7, 0);\n    });\n    i0.ɵɵelement(3, \"i\", 22);\n    i0.ɵɵtext(4, \" Delete Test Type 1 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\", 23);\n    i0.ɵɵtext(6, \" Test Type 1 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function EditSampleComponent_div_2_div_15_Template_input_ngModelChange_7_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const i_r7 = restoredCtx.index;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.content.Samples.testTypes[i_r7].name = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 11);\n    i0.ɵɵelementStart(9, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function EditSampleComponent_div_2_div_15_Template_a_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const i_r7 = restoredCtx.index;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return ctx_r20.addSubTestType(ctx_r20.content.Samples.testTypes[i_r7]);\n    });\n    i0.ɵɵelement(10, \"i\", 13);\n    i0.ɵɵtext(11, \" Add new Test Type 2 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, EditSampleComponent_div_2_div_15_ng_template_12_Template, 6, 2, \"ng-template\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r7 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"testType_\", i_r7, \"\");\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.content.Samples.testTypes[i_r7].name);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.content.Samples.testTypes[i_r7].subTests);\n  }\n}\n\nfunction EditSampleComponent_div_2_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtext(1, \" Loading\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditSampleComponent_div_2_button_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function EditSampleComponent_div_2_button_18_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return ctx_r21.save();\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditSampleComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"h3\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"hr\", 6);\n    i0.ɵɵelementStart(5, \"form\", null, 7);\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵelementStart(8, \"label\", 9);\n    i0.ɵɵtext(9, \" Name \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function EditSampleComponent_div_2_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.content.Samples.name = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 11);\n    i0.ɵɵelementStart(12, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function EditSampleComponent_div_2_Template_a_click_12_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.addField();\n    });\n    i0.ɵɵelement(13, \"i\", 13);\n    i0.ɵɵtext(14, \" Add new Test Types \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, EditSampleComponent_div_2_div_15_Template, 13, 3, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 15);\n    i0.ɵɵtemplate(17, EditSampleComponent_div_2_span_17_Template, 2, 0, \"span\", 16);\n    i0.ɵɵtemplate(18, EditSampleComponent_div_2_button_18_Template, 2, 0, \"button\", 17);\n    i0.ɵɵelementStart(19, \"label\", 18);\n    i0.ɵɵtext(20, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.content.title);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.content.Samples.name);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.content.Samples.testTypes);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSaveLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isSaveLoading);\n  }\n}\n\nexport let EditSampleComponent = /*#__PURE__*/(() => {\n  class EditSampleComponent {\n    constructor(apiService, toast, router) {\n      this.apiService = apiService;\n      this.toast = toast;\n      this.router = router;\n      this.content = {};\n      this.isSaveLoading = false;\n    }\n\n    ngOnInit() {}\n\n    save() {\n      this.isSaveLoading = true;\n\n      if (this.content.Samples.name == undefined) {\n        this.toast.error(\"Name is Empty!!\", {\n          position: 'top-right',\n          autoClose: true\n        });\n        this.isSaveLoading = false;\n      } else {\n        this.OperateAPICall(this.content.Samples, this.sampleModal);\n      }\n    }\n\n    addSubTestType(test) {\n      test.subTests.push({\n        name: ''\n      });\n    }\n\n    OperateAPICall(postData, modal) {\n      if (this.content.caller == 'POST') {\n        this.apiService.postData(this.content.apiLink, [postData]).subscribe(res => {\n          if (res) {\n            this.isSaveLoading = false;\n            this.toast.success(\"New item added\", {\n              position: 'top-right',\n              autoClose: true\n            });\n            modal.nativeElement.checked = false;\n          }\n        }, error => {\n          this.isSaveLoading = false;\n          this.toast.error(\"Error saving, try again after sometime.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n        });\n      } else {\n        postData.id = this.content.Samples.id;\n        this.apiService.putData(`${this.content.apiLink}/${this.content.Samples.id}`, this.content.Samples.id, postData).subscribe(res => {\n          this.isSaveLoading = false;\n          this.toast.success(\"Saved successfully.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n          modal.nativeElement.checked = false;\n        }, error => {\n          this.isSaveLoading = false;\n          this.toast.error(\"Error saving, try again after sometime.\", {\n            position: 'top-right',\n            autoClose: true\n          });\n        });\n      }\n    }\n\n    addField() {\n      var _subTests = [];\n\n      _subTests.push({\n        name: null\n      });\n\n      var obj = {\n        name: null,\n        subTests: _subTests\n      };\n      this.content.Samples.testTypes.push(obj);\n    }\n\n    deleteField(testType, index, subIndex) {\n      if (testType == 1) {\n        if (index > -1) {\n          this.content.Samples.testTypes.splice(index, 1);\n        }\n      } else if (testType == 2) {\n        if (index > -1) {\n          this.content.Samples.testTypes[index].subTests.splice(subIndex, 1);\n        }\n      }\n    }\n\n  }\n\n  EditSampleComponent.ɵfac = function EditSampleComponent_Factory(t) {\n    return new (t || EditSampleComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.HotToastService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  EditSampleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditSampleComponent,\n    selectors: [[\"edit-sample-view\"]],\n    viewQuery: function EditSampleComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sampleModal = _t.first);\n      }\n    },\n    inputs: {\n      content: \"content\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[\"type\", \"checkbox\", \"id\", \"Samples-modal\", 1, \"modal-toggle\"], [\"SamplesModal\", \"\"], [\"class\", \"modal\", 4, \"ngIf\"], [1, \"modal\"], [1, \"modal-box\"], [1, \"font-bold\", \"text-lg\"], [1, \"w-full\", \"mt-4\"], [\"form\", \"ngForm\"], [1, \"relative\", \"w-full\", \"mb-3\"], [1, \"block\", \"text-gray-700\", \"mt-4\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"name\", \"Name\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"rounded\", \"focus:ring\", \"w-full\", \"form-control\", \"form-control-sm\", 3, \"ngModel\", \"ngModelChange\"], [1, \"grid\", \"grid-cols-1\"], [1, \"text-blue-600\", \"cursor-pointer\", \"mt-4\", \"mb-2\", \"place-self-end\", 3, \"click\"], [1, \"fa-solid\", \"fa-plus\", \"text-l\", \"text-blue-600\"], [\"class\", \"card shadow mt-2 border\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-action\"], [\"class\", \"btn btn-sqaure loading align-center\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"for\", \"Samples-modal\", 1, \"btn\"], [1, \"card\", \"shadow\", \"mt-2\", \"border\"], [1, \"card-body\"], [1, \"text-red-400\", \"cursor-pointer\", \"place-self-end\", 3, \"click\"], [1, \"fa-solid\", \"fa-trash\", \"text-l\", \"text-red-400\"], [1, \"block\", \"text-gray-700\", \"mt-4\", \"text-sm\", \"font-bold\", \"mb-2\", \"w-full\"], [\"type\", \"text\", \"placeholder\", \"Test Type1\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"rounded\", \"focus:ring\", \"w-full\", \"form-control\", \"form-control-sm\", 3, \"name\", \"ngModel\", \"ngModelChange\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Test Type 2\", \"required\", \"\", \"minlength\", \"1\", \"maxlength\", \"250\", 1, \"rounded\", \"focus:ring\", \"w-full\", \"form-control\", \"form-control-sm\", 3, \"name\", \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-sqaure\", \"loading\", \"align-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function EditSampleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0, 1);\n        i0.ɵɵtemplate(2, EditSampleComponent_div_2_Template, 21, 5, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.content);\n      }\n    },\n    directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.RequiredValidator, i5.MinLengthValidator, i5.MaxLengthValidator, i5.NgControlStatus, i5.NgModel, i4.NgForOf],\n    encapsulation: 2\n  });\n  return EditSampleComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}